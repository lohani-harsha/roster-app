{"ast":null,"code":"// // import { configureStore } from \"@reduxjs/toolkit\";\n// // import { companyInfoReducer } from \"./reducers\";\n\n// // const store = configureStore({\n// //   companyInfoReducer, \n// //   middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(sagaMiddleware),\n// // })\n\n// // export default store;\n\n// import { configureStore } from '@reduxjs/toolkit';\n// import createSagaMiddleware from 'redux-saga';\n// import { companyInfoReducer } from \"./../redux/companyInfoSlice\";\n// import rootSaga from './sagas';\n\n// // Create saga middleware\n// const sagaMiddleware = createSagaMiddleware();\n\n// // Create store with redux-saga middleware\n// const store = configureStore({\n//   reducer: companyInfoReducer,\n//   middleware: (getDefaultMiddleware) =>\n//     getDefaultMiddleware({\n//       thunk: false,  // Disable thunk since we're using saga\n//       serializableCheck: false, // Disable serializable checks for saga actions\n//     }).concat(sagaMiddleware),\n// });\n\n// // Run the root saga\n// sagaMiddleware.run(rootSaga);\n\n// export default store;","map":{"version":3,"names":[],"sources":["/Users/mayanklohani/Documents/roster-app/src/redux/store.js"],"sourcesContent":["// // import { configureStore } from \"@reduxjs/toolkit\";\n// // import { companyInfoReducer } from \"./reducers\";\n\n// // const store = configureStore({\n// //   companyInfoReducer, \n// //   middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(sagaMiddleware),\n// // })\n\n// // export default store;\n\n// import { configureStore } from '@reduxjs/toolkit';\n// import createSagaMiddleware from 'redux-saga';\n// import { companyInfoReducer } from \"./../redux/companyInfoSlice\";\n// import rootSaga from './sagas';\n\n// // Create saga middleware\n// const sagaMiddleware = createSagaMiddleware();\n\n// // Create store with redux-saga middleware\n// const store = configureStore({\n//   reducer: companyInfoReducer,\n//   middleware: (getDefaultMiddleware) =>\n//     getDefaultMiddleware({\n//       thunk: false,  // Disable thunk since we're using saga\n//       serializableCheck: false, // Disable serializable checks for saga actions\n//     }).concat(sagaMiddleware),\n// });\n\n// // Run the root saga\n// sagaMiddleware.run(rootSaga);\n\n// export default store;"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}