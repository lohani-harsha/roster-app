{"ast":null,"code":"var _jsxFileName = \"/Users/mayanklohani/Documents/code/code-test-220225/code/src/components/EmployeeSummary.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FilterMatchMode, FilterOperator } from 'primereact/api';\nimport { toggleLoadingStateAction } from \"../store/reducers\";\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EmployeeSummary = () => {\n  _s();\n  const dispatch = useDispatch();\n  const companyInfoState = useSelector(state => state.companyInfoState);\n  const [filters, setFilters] = useState({\n    global: {\n      value: null,\n      matchMode: FilterMatchMode.CONTAINS\n    },\n    name: {\n      value: null,\n      matchMode: FilterMatchMode.STARTS_WITH\n    },\n    'country.name': {\n      value: null,\n      matchMode: FilterMatchMode.STARTS_WITH\n    },\n    representative: {\n      value: null,\n      matchMode: FilterMatchMode.IN\n    },\n    status: {\n      value: null,\n      matchMode: FilterMatchMode.EQUALS\n    },\n    verified: {\n      value: null,\n      matchMode: FilterMatchMode.EQUALS\n    }\n  });\n  const [globalFilterValue, setGlobalFilterValue] = useState('');\n  const onGlobalFilterChange = e => {\n    const value = e.target.value;\n    let _filters = {\n      ...filters\n    };\n    _filters['global'].value = value;\n    setFilters(_filters);\n    setGlobalFilterValue(value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: companyInfoState.companyInfo.companyName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: companyInfoState.companyInfo.companyMotto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n        value: companyInfoState.employees,\n        paginator: true,\n        rows: 5,\n        rowsPerPageOptions: [5, 10, 25, 50],\n        globalFilterFields: ['id'],\n        tableStyle: {\n          minWidth: '50rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          field: \"id\",\n          header: \"ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"firstName\",\n          header: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"contactNo\",\n          header: \"Contact No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"address\",\n          header: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(EmployeeSummary, \"GugZbnnJljaMlzqWue6LwMtJgUM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = EmployeeSummary;\nexport default EmployeeSummary;\nvar _c;\n$RefreshReg$(_c, \"EmployeeSummary\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","FilterMatchMode","FilterOperator","toggleLoadingStateAction","DataTable","Column","jsxDEV","_jsxDEV","Fragment","_Fragment","EmployeeSummary","_s","dispatch","companyInfoState","state","filters","setFilters","global","value","matchMode","CONTAINS","name","STARTS_WITH","representative","IN","status","EQUALS","verified","globalFilterValue","setGlobalFilterValue","onGlobalFilterChange","e","target","_filters","children","companyInfo","companyName","fileName","_jsxFileName","lineNumber","columnNumber","companyMotto","employees","paginator","rows","rowsPerPageOptions","globalFilterFields","tableStyle","minWidth","field","header","_c","$RefreshReg$"],"sources":["/Users/mayanklohani/Documents/code/code-test-220225/code/src/components/EmployeeSummary.jsx"],"sourcesContent":["import React, { useState, useEffect  } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FilterMatchMode, FilterOperator } from 'primereact/api';\nimport { toggleLoadingStateAction } from \"../store/reducers\";\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\n\nconst EmployeeSummary = () => {\n  const dispatch = useDispatch();\n  const companyInfoState = useSelector ( (state) => state.companyInfoState)\n  const [filters, setFilters] = useState({\n    global: { value: null, matchMode: FilterMatchMode.CONTAINS },\n    name: { value: null, matchMode: FilterMatchMode.STARTS_WITH },\n    'country.name': { value: null, matchMode: FilterMatchMode.STARTS_WITH },\n    representative: { value: null, matchMode: FilterMatchMode.IN },\n    status: { value: null, matchMode: FilterMatchMode.EQUALS },\n    verified: { value: null, matchMode: FilterMatchMode.EQUALS }\n});\n  const [globalFilterValue, setGlobalFilterValue] = useState('');\n\n  const onGlobalFilterChange = (e) => {\n    const value = e.target.value;\n    let _filters = { ...filters };\n\n    _filters['global'].value = value;\n\n    setFilters(_filters);\n    setGlobalFilterValue(value);\n};\n  return (\n    <>\n    {/* <div>{companyInfoState.companyInfo.companyName}</div>\n    <button onClick={ (e)=> {\n        dispatch(toggleLoadingStateAction())\n    }}>toggle</button>\n    <div> loading: {companyInfoState.loading ? 'loading': 'not loading'}</div>\n    <div>\n        {\n            companyInfoState.companyInfo.companyName\n        }\n       \n    </div> */}\n    <div>\n        <div>\n            <div>{companyInfoState.companyInfo.companyName}</div>\n            <div>{companyInfoState.companyInfo.companyMotto}</div>\n        </div>\n    <div></div>\n    \n    <DataTable\n    value={companyInfoState.employees} \n    paginator rows={5} rowsPerPageOptions={[5, 10, 25, 50]}\n    globalFilterFields={['id']}\n    tableStyle={{ minWidth: '50rem' }\n   \n        \n    }>\n    <Column field=\"id\" header=\"ID\"></Column>\n    <Column field=\"firstName\" header=\"Name\" ></Column>\n    <Column field=\"contactNo\" header=\"Contact No\"></Column>\n    <Column field=\"address\" header=\"Address\"></Column>\n    </DataTable>\n    </div>\n    </>\n  );\n};\n\nexport default EmployeeSummary ;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}