{"ast":null,"code":"var _jsxFileName = \"/Users/mayanklohani/Documents/roster-app/src/index.js\";\n// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import './index.css';\n// import App from './App';\n// import store from './store/store'\n// import {Provider} from 'react-redux'\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <Provider store={store}>\n//     <App />\n//   </Provider>\n// )\n\n// import { configureStore } from '@reduxjs/toolkit'\nimport store from './store/store';\nimport createSagaMiddleware from 'redux-saga';\nimport companyInfoReducer from './store/reducers';\nimport mySaga from './redux/sagas';\n\n// create the saga middleware\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sagaMiddleware = createSagaMiddleware();\n// mount it on the Store\n// const store = configureStore({\n//   companyInfoReducer, \n//   middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(sagaMiddleware),\n// })\n\n// then run the saga\nsagaMiddleware.run(mySaga);\n\n// render the application\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["store","createSagaMiddleware","companyInfoReducer","mySaga","jsxDEV","_jsxDEV","sagaMiddleware","run","root","ReactDOM","createRoot","document","getElementById","render","Provider","children","App","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/mayanklohani/Documents/roster-app/src/index.js"],"sourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import './index.css';\n// import App from './App';\n// import store from './store/store'\n// import {Provider} from 'react-redux'\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <Provider store={store}>\n//     <App />\n//   </Provider>\n// )\n\n// import { configureStore } from '@reduxjs/toolkit'\nimport store from './store/store'\nimport createSagaMiddleware from 'redux-saga'\n\nimport companyInfoReducer from './store/reducers'\nimport mySaga from './redux/sagas'\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware()\n// mount it on the Store\n// const store = configureStore({\n//   companyInfoReducer, \n//   middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(sagaMiddleware),\n// })\n\n// then run the saga\nsagaMiddleware.run(mySaga)\n\n// render the application\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n)"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,MAAM,eAAe;AACjC,OAAOC,oBAAoB,MAAM,YAAY;AAE7C,OAAOC,kBAAkB,MAAM,kBAAkB;AACjD,OAAOC,MAAM,MAAM,eAAe;;AAElC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAGL,oBAAoB,CAAC,CAAC;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACAK,cAAc,CAACC,GAAG,CAACJ,MAAM,CAAC;;AAE1B;AACA,MAAMK,IAAI,GAAGC,QAAQ,CAACC,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEJ,IAAI,CAACK,MAAM,cACTR,OAAA,CAACS,QAAQ;EAACd,KAAK,EAAEA,KAAM;EAAAe,QAAA,eACrBV,OAAA,CAACW,GAAG;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACC,CACZ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}