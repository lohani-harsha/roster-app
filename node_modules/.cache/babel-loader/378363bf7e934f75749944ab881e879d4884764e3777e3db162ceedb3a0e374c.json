{"ast":null,"code":"var _jsxFileName = \"/Users/mayanklohani/Documents/code/code-test-220225/code/src/components/EmployeeSummary.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleLoadingStateAction } from \"../store/reducers\";\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EmployeeSummary = () => {\n  _s();\n  const dispatch = useDispatch();\n  const companyInfoState = useSelector(state => state.companyInfoState);\n  const [globalFilterValue, setGlobalFilterValue] = useState('');\n  const onGlobalFilterChange = e => {\n    const value = e.target.value;\n    let _filters = {\n      ...filters\n    };\n    _filters['global'].value = value;\n    setFilters(_filters);\n    setGlobalFilterValue(value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: companyInfoState.companyInfo.companyName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: companyInfoState.companyInfo.companyMotto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n        value: companyInfoState.employees,\n        paginator: true,\n        rows: 5,\n        rowsPerPageOptions: [5, 10, 25, 50],\n        globalFilterFields: ['id'],\n        tableStyle: {\n          minWidth: '50rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          field: \"id\",\n          header: \"ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"firstName\",\n          header: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"contactNo\",\n          header: \"Contact No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"address\",\n          header: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(EmployeeSummary, \"WFo/b+G2U8o3/zCUHT1C9adVSlE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = EmployeeSummary;\nexport default EmployeeSummary;\nvar _c;\n$RefreshReg$(_c, \"EmployeeSummary\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","toggleLoadingStateAction","DataTable","Column","jsxDEV","_jsxDEV","Fragment","_Fragment","EmployeeSummary","_s","dispatch","companyInfoState","state","globalFilterValue","setGlobalFilterValue","onGlobalFilterChange","e","value","target","_filters","filters","setFilters","children","companyInfo","companyName","fileName","_jsxFileName","lineNumber","columnNumber","companyMotto","employees","paginator","rows","rowsPerPageOptions","globalFilterFields","tableStyle","minWidth","field","header","_c","$RefreshReg$"],"sources":["/Users/mayanklohani/Documents/code/code-test-220225/code/src/components/EmployeeSummary.jsx"],"sourcesContent":["import React, { useState, useEffect  } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleLoadingStateAction } from \"../store/reducers\";\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\n\nconst EmployeeSummary = () => {\n  const dispatch = useDispatch();\n  const companyInfoState = useSelector ( (state) => state.companyInfoState)\n  const [globalFilterValue, setGlobalFilterValue] = useState('');\n\n  const onGlobalFilterChange = (e) => {\n    const value = e.target.value;\n    let _filters = { ...filters };\n\n    _filters['global'].value = value;\n\n    setFilters(_filters);\n    setGlobalFilterValue(value);\n};\n  return (\n    <>\n    {/* <div>{companyInfoState.companyInfo.companyName}</div>\n    <button onClick={ (e)=> {\n        dispatch(toggleLoadingStateAction())\n    }}>toggle</button>\n    <div> loading: {companyInfoState.loading ? 'loading': 'not loading'}</div>\n    <div>\n        {\n            companyInfoState.companyInfo.companyName\n        }\n       \n    </div> */}\n    <div>\n        <div>\n            <div>{companyInfoState.companyInfo.companyName}</div>\n            <div>{companyInfoState.companyInfo.companyMotto}</div>\n        </div>\n    <div></div>\n    \n    <DataTable\n    value={companyInfoState.employees} \n    paginator rows={5} rowsPerPageOptions={[5, 10, 25, 50]}\n    globalFilterFields={['id']}\n    tableStyle={{ minWidth: '50rem' }\n   \n        \n    }>\n    <Column field=\"id\" header=\"ID\"></Column>\n    <Column field=\"firstName\" header=\"Name\" ></Column>\n    <Column field=\"contactNo\" header=\"Contact No\"></Column>\n    <Column field=\"address\" header=\"Address\"></Column>\n    </DataTable>\n    </div>\n    </>\n  );\n};\n\nexport default EmployeeSummary ;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}